#spring.main.web-application-type=none
#webserver port(default : 8080, 0으로 하면 random port)
server.port=8888
#ssl 적용 (keytool 이용해서 인증서 만든 후 application root에 위치)
#ssl 적용시 https 접속(http도 접속 가능하게 하려면 Applition.java 에 추가 Connector 설정)
#server.ssl.key-store=keystore.p12
#server.ssl.key-store-type=PKCS12
#server.ssl.key-store-password=123456
#server.ssl.key-alias=spring

#Property예제
kkk=KKKKKKKK
randomvalue=${random.int} ${kkk} AAAAAAA
bnzprops.age=10
bnzprops.full-name=bonzo
bnzprops.name=bnz

#로깅(기본 INFO 로깅)
logging.level.root=DEBUG
#logging.file=aaa.log
#logging.path=logdir
#로깅packge단위로
#logging.level.com.bnz=DEBUG

#정적리소스
# - 기본 리소스 위치 classpath: /static /public /resources /META-INF/resources
# - (localhost/hello.html  -> localhost/static/hello.html 로 요청해야 함)
#spring.mvc.static-path-pattern=/static/**
# - 이방법 보다는 WebConfig.java 의 addResourceHandlers를 이용하는 걸 추천(기본 정적 리소스path는 유지하면서 추가 설정 가능)

#thymeleaf 사용시 재구동없이 바로 반영
spring.thymeleaf.cache=false

# h2 - inmemory db http://localhost:8888/h2-console 접속 가능
# SampleRunner 참고(구동시 create db, insert)
spring.h2.console.enabled=false

# jdbc사용(mysql, postgresSQL 등.. db는 개별 설치)
#-------------------create database springbootdb DEFAULT character set utf8;
#-------------------drop user bonzo@localhost;
#-------------------create user bonzo@localhost IDENTIFIED by 'dhtmdwns1!';
#-------------------create user 'bonzo'@'%' IDENTIFIED by 'dhtmdwns1!';
#-------------------grant all PRIVILEGES on *.* to bonzo@localhost IDENTIFIED by 'dhtmdwns1!' with grant option;
#-------------------flush PRIVILEGES;
#spring.datasource.hikari.maximum-pool-size=4
#spring.datasource.url=jdbc:mysql://localhost:3306/springbootdb
#spring.datasource.username=bonzo
#spring.datasource.password=dhtmdwns1!


#CREATE TABLE "SCI"."ACCOUNT"
#(	"ID" NUMBER(15,0) NOT NULL ENABLE,
#"USERNAME" VARCHAR2(50) NOT NULL ENABLE,
#"PASSWORD" VARCHAR2(200),
#PRIMARY KEY ("ID"));
#spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@localhost:1521/XE
spring.datasource.username=SCI
spring.datasource.password=sci

springdoc.swagger-ui.csrf.enabled=true